---
title: "Unix和里奇留给人类最好的遗产"
editor: visual
---

2011年10月，是计算机界损失惨重的一个月。2011年10月24日，LISP语言的发明者、人工智能之父、1971年图灵奖得主约翰·麦卡锡与世长辞，享年84岁。就在几天之前，2011年10月12日，C语言的发明者、Unix之父、1983年图灵奖得主丹尼斯·里奇驾鹤西归，享年70岁。这两位计算机界的标志性人物在半个月之内相继离世。如果有天堂的话，希望在天堂里，他们可以继续讨论计算机的问题。

当我们现在分别把这两位先驱的名字输入谷歌搜索引擎，他们一生的事迹，谷歌返回的结果都不如当前当红女星换了一个男朋友这件事返回的结果多。这也显示了IT业相比于娱乐界吸引到的关注度是多么的微不足道。LISP之父约翰·麦卡锡留到以后再说。今天我说的是主角丹尼斯·里奇。

20世纪70年代，他和肯·汤姆逊合作开发了Unix操作系统。为了能方便地开发Unix，他发明了C语言。C编译器推出以后，迅速成了Unix系统上开发的不二选择。数年之内，C语言发展成了一门通用的编程语言。今天我们所用到的所有重要的系统，毫无疑问都是C语言写的——Windows、Mac、iOS、Android上面的系统，或多或少，C语言都是最至关重要的部分。美国宇航局的研究员杰拉德·霍尔兹曼在里奇去世的那一年说，刚刚登上火星、盖有陨石坑的好奇号探测车上面，至少有380万行代码是用C语言写的，用来控制好奇号的手臂。丹尼斯·里奇的发明从地球走上了火星。

1941年9月9日，丹尼斯·里奇出生在纽约一个富裕的中产阶级家庭，他从小住在舒适的纽约郊区一栋大房子里。他的父亲是一位科学家，在贝尔实验室工作。因为遗传了他父亲优秀的基因，以其学生时代就一直聪明过人，几乎毫不费力地就被哈佛大学录取。他在哈佛大学学习的专业是物理学和数学。

当他在大学一年级的时候，这个风度翩翩的少年意外参加了一次讲座，是关于universe（宇宙）的。当时一种全自动计算机——是莫奇来电脑公司制造的、使用电子管的计算机。当时的计算机主要是用来解决数学问题，他是数学高手，比如说使用计算机来解决流体以及风洞等数学难题。随着他解决的问题越来越多，他也越来越喜欢计算机。

虽然他攻读的是数学博士学位，并在1968年通过博士论文答辩，博士论文的题目是《程序结构与计算复杂性》，但是当时他对计算机太痴迷了，以至于连最后的一些文字工作都懒得去做。他放弃了博士学位，去有计算机的地方去研究计算机了。在30年以后，记者采访他，他回忆起这段往事不无遗憾。他说，年轻的时候对计算机太义无反顾了，他现在有些遗憾，现在他还是很希望能够获得数学博士学位。

里奇的第一份工作是在美国政府的圣地亚国家实验室，这个实验室是负责制造高科技武器的。后来里奇回忆说，都已经是一九六八年了，再去想办法制造原子弹，已经没有任何意思了。于是很快他就去了他父亲工作的地方——贝尔实验室。

丹尼斯·里奇和肯·汤姆逊这两个对计算机非常痴迷的家伙，一前一后相差一年，进了贝尔实验室。很快，这两个家伙就被卷入了一个巨大的黑洞——史上最著名的失败项目之一，Multics操作系统。

当时计算机的操作系统都是批处理系统。我简单地介绍一下批处理操作系统：就是当你输入数据，然后等着计算机去完成输出结果，期间操作人员无法对计算机进行干预，一切都只能交给操作系统。这种操作系统和今天非常的不同。

因此，麻省理工、贝尔实验室以及IBM公司都在试图研究新的操作系统，就是以后操作系统新的方向——分时共享系统。一句话来说，多个系统可以同时使用一台计算机，多个程序也可以同时共享计算机的硬件和软件资源。

在这里希望大家找一找我前面讲到的一期节目叫《互联网是谁发明的？》。在微信公众号里可以翻历史记录，就在前几期里面提到了ARPA（应为“ARPANET”，即美国国防部的高级科技计划署的网络项目）。在这里，美国高科技计划署又开始爆款了。

该计划署提供资金，希望能够开发出下一代分时共享系统，名字就叫做Multics。这个项目最终以失败告终。丹尼斯·里奇和肯·汤姆逊这两个年轻人加入了该项目，失败是成功之母。这个下一代分时共享操作系统对后来的影响非常的深远，不但因此诞生了Unix，还间接地影响了我们现在所有的操作系统。否则我们到现在也没有办法一边听歌一边看网页。

我们今天所使用的操作系统算是分时共享操作系统之一。按照美国高级技术研究计划署一贯脑洞大开的作风，非常建议大家去看看我以前的文章《互联网是谁发明的？》。互联网也是该组织脑洞大开的项目之一。它资助的这个Multics项目是最具野心的分时共享系统。

当时计划的是制造出一个操作系统，这个操作系统只要安装在电脑上，这台电脑就可以至少支持1000个终端，至少能让300个用户同时使用。后来有个科技记者这么评论，这个操作系统的难度不亚于把人送到月球上去。因为当时只有批处理操作系统，步子迈得太大，也就扯到蛋了。

后来肯·汤姆逊回忆说，Multics是个好的系统，但是当时一下子给Multics增加了太多新的功能，在假设的基础上添加新的假设，再在这些假设的基础上继续添加新的假设。随后，项目不堪重负，在1969年已经投入巨大人力物力的贝尔实验室终于扛不住了，退出了Multics这个项目。肯·汤姆逊和丹尼斯·里奇又回到了贝尔实验室。

人性这个东西都是相通的，虽然这个Multics失败了，但是他的理念是非常好的。丹尼斯·里奇后来解释说，分时系统非常好，这意味着以后的合作和沟通变得非常的简单，你的工作内容是对所有人都是透明的。

汤姆逊和里奇这两个见过好系统的人，再回到贝尔实验室，使用批处理系统越来越受不了了。所有的人都一样，动物也一样。忘了在哪里看过这样一篇文章，说一旦非洲草原上的动物吃过人，就只能赶紧的把他杀了，因为他已经知道人好吃了，下一次再碰到人，他就记住了，就想再尝一尝。就像一直吃素，突然开荤了，基本上也就拉不住了。人性使然，有些错误犯了第一次，肯定会第二次，九头牛也拉不回来。肯·汤姆逊和丹尼斯·里奇也是这样。

虽然Multics系统是失败了，但是他的理念非常的好，见过一次也就开始念念不忘了。然后他们两个就开始轮番游说他们的上司，希望能被他们的上司说服。贝尔实验室刚刚从一个失败的大项目中退出来，从管理者的角度来看，这个项目简直是赔了夫人又折兵。你这两个小家伙又想让我刚出龙潭又入虎穴，这肯定是门都没有了。管理层直接否决了重启分时操作系统的可能性。

念念不忘的滋味，大家想必也知道。那些参加了Multics的人是不可能轻易放弃的。下一讲，我们就来讲讲以丹尼斯·里奇和肯·汤姆逊为首的一小坨不明真相的群众是怎么在领导的眼皮底下，通过申请制造一个新的自处理项目、通过移植游戏到不同系统等障眼法，继续研究分时系统的故事。

最后再讲一件事情，是一本很著名的书。这本书是一群特别讨厌Unix的人写的，可能是由爱生恨或者是由恨生爱。反正这本书对Unix进行了恶毒的攻击，有的人爱Unix，肯定就有人恨Unix，这也无可厚非。但是如果恨一个东西，能恨到找一群技术专家来写一本书来骂它，到现在我还没有想到过其他的书。这里面全是数落Unix的缺点，基本上一句好话也没有。

按照李敖的话来说：“我不但骂他是笨蛋，我还证明他是笨蛋。”这本书就是这样，不止骂Unix是垃圾，还证明Unix的垃圾真的是垃圾，而且读者非常多，翻译成了各种语言，也翻译成了中文。我把中文放在了百度网盘里，在这里放一个链接。嗯，我就把它放在我的微信公众号“软件那些事”里。你可以通过对话框回复一个“Unix”或者这篇文章的名字，然后找到这个链接，就可以下载这本书了。这个链接我就用红色的字标出来，因为非常长，念一个这么长的链接还是非常困难的。

这本书简直把黑人这门艺术提到了一个档次。这本书的作者都是MIT（麻省理工）AI实验室的专家。大家知道吧？麻省理工有一个人叫贾布利亚，他非常的讨厌Unix，基本上看见之后就情不自禁地黑两句，这也算是真爱吧。他有一个观点，我倒是特别认同。他说，当然这个观点也是黑Unix和C语言的，他说Unix和C为什么流行呢？因为他们就是终极的病毒。

在书里，你可以看到他说Unix和C符合电脑病毒的一切特点：体积非常小，可以传染各种各样的电脑，可移植性很高，而且变异速度极快，病毒都没有Unix变异速度那么快。这么烂的Unix几乎获得了整个市场，不是因为它好，而是因为它烂，碰到谁就感染谁，当然能够赢得市场。

更搞笑的是，这本很黑Unix和C的书要找一个人写结束语，你们猜他找的是谁？就是本文的主角——Unix和C语言的作者丹尼斯·里奇。更搞笑的是，丹尼斯·里奇还真的把结束语给写了。里奇当然也不客气，他写了一篇恶心他们的文章，直接给骂了回去。那意思就是说你骂我的Unix和C，你会骂人，我也会骂人。然后呢，这本书一个字也没有改，就把这篇挨骂的文章当做本书的结束语。我节选几句话分享给大家，都是骂人不带脏字的。

下面就是里奇的那篇文章。他说：“我做了这么个比喻，你这本书凉拌着很多真知灼见和缜密思考，就像夹杂着未消化营养物的大便，足以养活一些寄生虫。但它并不是可口的馅饼，因为它散发着鄙视和嫉妒的臭味。祝你有个好胃口。”
