---
title: "Unix火箭的助推器：C语言"
editor: visual
---

如果时光倒流，任何人站在那台运行着Unix的PDP电脑面前，让他预测这台Unix以后会变成什么样子，就算再有勇气的人，也不会想到Unix将会无处不在。

丹尼斯·里奇和肯·汤姆逊的项目算是做完了。他们以前申请的是自处理系统，也做完了。Unix第一次发挥了它的作用，使用这台Unix机器上的自处理软件，贝尔实验室减轻了3个大资源的工作量，这也算是Unix第一次走向使用。

随后，Unix在大学和研究人员中口口相传，这个简单、紧凑、高效的系统引导了技术人员的喜爱。由于政府反垄断法的规定，贝尔实验室的技术都要有许可，以防止贝尔实验室的产品再像电话一样迅速地形成垄断。当美国电报电话公司的律师看到Unix以后，感觉这个东西可能不会有什么大的用处，也从中看不到有盈利的可能。毕竟，再有眼光的人，也看不到一个运行在落后机器上的操作系统有什么巨大的前景，而且这个操作系统还是一个自处理软件的副产品。

在肯·汤姆逊和丹尼斯·里奇以及另外一些技术人员的建议下，这些律师答应可以让Unix以非常低廉的价格与大学签订许可协议。毕竟在无利可图的项目里，给贝尔实验室赢得一个慷慨大方的名声，也算是不错的选择。

很快，大学的研究人员也喜欢上了Unix，像加州大学伯克利分校、斯坦福大学、卡耐基梅隆大学纷纷将自己的机器替换为Unix操作系统。因为Unix操作系统所需要的硬件环境非常低，可以以非常低的价格购置一些机器，只要运行Unix就能获得很高的性能。

如果以前有听众听我讲Java那一期的话，Java语言的创始人就是在卡耐基梅隆大学安装Unix的时候，构思了Java的雏形。也同样是因为Unix，高斯林和易成了好朋友，间接促成了Java语言。

所以说，Unix真是个非常厉害的系统，给计算机行业提供了无数的可能。伦敦大学一位用过Unix的名叫乔治·康乐瑞斯的教授说，如果在Unix上设计和调试程序，比在批处理大型机上至少快了十倍，而且运行Unix的机器比起大型机来说简直微不足道。多说一句，伦敦大学是在一九七三年底使用Unix的，也是欧洲第一个使用Unix的大学。Unix从美洲大陆传播到了欧洲。

在一九七三年十月，汤姆逊和里奇这样描述Unix。他们说，Unix最重要的成功在于，他证明了一个强大的交互系统，不需要昂贵的设备也可以运行。它可以运行在价值仅为4万美元的廉价硬件上。要知道，当时一台大型机的价值数百万美元，而且易用性还远不如Unix。贝尔实验室还公布了操作系统的源代码，公开了Unix的细节。汤姆逊和里奇编写了用户手册，我还找到了里奇和汤姆逊，汤姆逊写的第一版的手册，一个system调用的说明书。我把这个照片放在微信公众号“软件那些事”里，如果有兴趣的读者可以看一看。

我们通过这张图可以看出，当时汤姆逊的名字使用的是“King”，里奇使用的是他名字的字母，写写“Mr.”。在Unix手册中记录了该操作系统的方方面面，甚至该手册还有专门的一张用来记录目前已知的Unix未修复的bug。这种坦率和真诚让人不得不爱。

上Unix，当第一版的Unix是使用汇编语言开发的，因为当时还没有更好的工具来开发Unix。因为当时Unix需要运行在多种电脑之上，可移植性成了当时的迫切需求之一。于是丹尼斯·里奇当仁不让地接受了发明一种新语言的任务。如果要仔细的追究起来，C语言和Unix一样，最初的根源都可以追溯到那个失败的Multics项目上。Multics项目组在试图完成一个伟大的操作系统之外，还延伸出来了一种名字叫做BCPL的编程语言。当时Multics项目使用的主要开发语言是PL语言。这个语言试图将Fortran、Hobo和Algo语言的优点相结合，结果弄出来了一个四不像。但是这个语言也有非常多的先进理念，但是以当时的眼光来衡量都有点太先进了。

由于Unix借鉴了很多Multics的经验，因此汤姆逊在Unix编程语言上也借鉴了不少BCPL的经验。汤姆逊将这个BCPL的语言简化过以后，将它称之为B语言。这种语言和Unix一样都可以运行在非常差的硬件之上。BCPL语言和B语言都是无类型的语言，在早期的硬件里无类型是没有什么问题的。因为在当时的计算机里都是处理16位，当比较强大的计算机，可能能够处理32位。但是等到了1970年，PDP-11这个机器出来，已经在硬件上可以识别多种数据类型了。这个时候编程语言就要支持整形、浮点型等不同的类型，有了硬件以后，软件也必须要跟得上。

在一九七二年，里奇基于B语言创造出来的C语言是程序员能够使用支持数据类型的电脑。C语言是一种非常接近底层的语言，虽然它也被称之为高级语言，那是因为它并不像汇编语言一样绑定在某种特定的机器之上。有了C语言之后，程序员就可以使用高级编程语言对操作系统进行编程了。在此之前，系统编程只能使用汇编语言来完成。

在正确的时间，C语言作为一个正确的工具出现了。通过C语言，Unix迅速从小型机迅速扩展到工作站，一直到超级计算机，到处都是Unix的影子。C语言就是Unix的助推器，让Unix系统一飞冲天。很长的一段时间里，有Unix的地方必然有C语言，有C语言的地方必然有Unix。

在20世纪八十年代，C语言开始进入个人计算机编程领域。不经意之间，C语言成为了编程语言的王者。到目前为止，各种新的语言来来去去，只有C语言从来没有从第一的位置上掉下来。

很显然，Unix和C语言相得益彰。在计算机发展的历史中，C语言和Unix是真正的中流砥柱。他们在合适的时候，天时地利人和都被完美的结合了起来。因此，C语言和Unix才能在不同的机器、在不同的国家、在不同的行业里蓬勃的发展。

在一九八三年，他们两个人在接受图灵奖的时候，他们称他们一生的合作是最美妙的事情。汤姆逊回忆说，有一次，他们两个彼此写下了20行汇编代码，比较之后发现他们的代码竟然一个字也不差，完全一模一样。汤姆逊总结说，和李奇合作创造出来的成果，远远超过他们各自工作做出的成果。

在Unix大行其道的时候，俗话都说人红是非多，Unix的巨大成功自然让很多人对此垂涎欲滴。一场暗流涌动的争夺战即将开始。有好几家公司都宣称对Unix拥有所有权。Unix即将进入风雨飘摇的一段岁月，人性的贪婪在这场Unix版权之争中显露无遗。

下一期我将会讲Unix版权之争这段不堪回首的往事。
