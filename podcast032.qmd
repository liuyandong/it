---
title: "BSD版权战争中重获自由的Unix"
editor: visual
---

1973年11月，当时汤姆森和里奇在普渡大学召开操作系统原理研讨会上发表了第一篇关于Unix的学术论文。当时加州大学伯克利分校的教授，包括法布瑞，正好也出席了会议，对此非常感兴趣，于是就获得了一份Unix的拷贝，准备带回加州大学伯克利分校进行研究。

回到伯克利分校以后，教授才发现操作系统是有的，但是还缺一台电脑。说起来这个跟我有点相似，我也经常有了手机外套，但是就是缺一台苹果手机。于是这个教授开始忽悠计算机系、数学系和统计系，共同出资买一台电脑，终于买了一台PDP-11。赶紧让他的研究生把这个操作系统装上，但安装系统的时候就出了问题。正所谓老革命遇见了新问题，刚买的电脑太新了，操作系统不支持这台新电脑，同一个控制器上就有两个磁盘。在百般无奈下，该教授联系了汤姆森，希望他能帮忙解决一下问题。

可惜的是，当时汤姆森在美国的新墨西哥州，而加州大学在加州，两地直线距离隔了5000公里。于是他们突发奇想，用一台300波特的调制解调器接上电话，让汤姆森进行远程调试，边调试边安装。最后竟然也把这个系统安装好了。贝尔实验室对此非常乐意，毕竟有新机器可以玩，感觉很开心。

再回到伯克利这一边，由于这台机器本来就是忽悠三个系买的，计算机系想使用的是Unix操作系统，而数学系和统计系则想使用的是批处理系统。这个教授当时有点腹黑，他忽悠共同出资的时候，压根就没提他要重新装一个操作系统叫Unix。结果数学系和统计系一看，纷纷反对。终于他们达成了一个协议：一天24个小时，每个系平均用8个小时。只是计算机系用的时候，得首先自己安装Unix系统，等你用完了以后，再把批处理操作系统给我们，重新安上这台电脑。就这样三班倒。结果后来数学系和统计系的学生也爱上了Unix，这个是后话了，与本文也没什么关系，暂且不提。

后来就是这几个系的人都觉得三班倒还是太麻烦了，于是每个系又新买了一台机器，第一件事情就是先装上Unix。后来这个系统比其他的系统好用多了。加州大学伯克利分校也是一个牛人辈出之地，随后的六年里，他们一直在帮助改进Unix，把Unix修改得又快又好。期间，他们还把自己的伯克利Unix免费送出了几千份。这个几千份的数字现在已经没法具体考证了，但是书上是这么写的。只要学校希望得到伯克利的Unix，只需要邮寄一个磁盘外加返回的邮费，伯克利就把这个拷贝邮寄回去。

同时，伯克利还把自己以前运行的批处理系统成的一个数据库叫Incress给移植到Unix上。结果这个数据库一不小心就成了Unix第一个大型的软件，几年之间卖出了几百份。还是这位教授，包括法布瑞教授。随后的几年，他买了好几台PDP机器，其中有一台是1975年最新的一款叫PDP-11/70。这台机器当时是最新的机型，价格比上一代贵了两倍，但是法布瑞教授还是买了，因为他卖数据库卖得比较多，反正也不缺钱。

恰好这一年，1975年，汤姆森休假一年。因为伯克利也是他的母校，鲍勃·法布瑞就果断地邀请汤姆森来母校教书，当访问教授。汤姆森去当访问教授的这一年，就在鲍勃·法布瑞买的那台机器上开发了新的操作系统，叫Unix第六版，也叫Unix V6。

这一年，这个实验室来了两个年轻人，一个叫Bill Joy，一个叫Chuck Haley。这两个年轻人日后建立了一个叫做Sun Microsystems的公司，另一个则是顶级的技术专家。没有他们俩，这个Unix内核根本不会进化得这么快。他们两个人合作开发了vi编辑器，至今这个编辑器在程序员中使用的仍然非常多。

以上的一些故事是来自Steven Weber写的《The Success of Open Source》。这本书非常值得大家去看看，在Google Books里你可以看到绝大部分内容，但好像一直没有出中文版。不过我觉得就算出了中文版，可能连2000册也卖不出去，连翻译费都不够。但我还是很希望大家去看这本书。

后来有一次，我看到Bill Joy在功成名就以后的一次采访视频。他就谈到1975年他和肯·汤姆森在伯克利学校同一个实验室工作的时候，当时这个早已经是亿万富翁的巨头，他讲到这件事情的时候，突然直起了腰，眼睛里还透露出喜悦的神色，手舞足蹈地就开始讲当年的情景。这也让我真是感觉到有点感慨万千，他还是那么怀念当年那个情况。

在1976年末，汤姆森就结束了他为期一年的访问教授任期，离开了伯克利。但是接过了汤姆森衣钵的Joy和Haley就对Unix内核产生了浓厚的兴趣。接下来的时间里，他们改进Unix的内核，解决了Unix内核瓶颈的问题。Joy和Haley在伯克利读书的时候，还完成了Pascal的编译器，系统也是免费地分发给需要的人。并且在Pascal编译器系统下的一个目录里，附送了一个编辑器，买一送一。其实严格来说也不能算是买一送一，因为Pascal本身就是免费的。这个编译器呢，就是人家没要，他也免费送一个。这个编译器带的编辑器，就是日后大名鼎鼎的vi编辑器。

我很长的一段时间，就是在BSD系统上开发软件。所以呢，vi编辑器一直是我唯一能使用的编辑器（其实有两个，但是我一直用它，还有一个叫emacs）。其他的BSD系统上的编辑器，并不像Windows那么多选择。刚开始的时候我也是用不习惯，但是用了十年以后，现在我每次如果用电脑，尤其是Windows电脑，它没有这个编辑器。如果我要用那台Windows电脑，我第一个装的软件，就是这个vi编辑器。

既然说到了BSD，在1978年的中期，Joy和Haley在伯克利读书的期间，就不停地更新Unix系统以及Pascal编辑器系统和Unix内核，以便让新系统使用不同的新机器，并且解决了很多内核的问题。索性呢，他们在发布的时候，就给这个新系统起了一个名字，就叫做第二版本的伯克利软件发行版，简称了BSD系统。这个版本的系统增加了非常多的功能，大部分都归功于Joy这个人。后来他建立商业公司，赚了很多钱。后来也是因为他，才有了Java语言（这个都是我以前讲过的，在讲Java那一期的时候）。比如说他还开发了Pascal的系统，这个vi编辑器也是他开发的，他还有终端的系统，叫termcap。到现在这几个软件依然被广泛地使用，起码我一直在用vi。

随后的一段时间，Joy和Haley开始慢慢地淡出了BSD系统的开发，转而从事其他更有趣的工作。这个更有趣的工作，其实就是建立了一个市值曾经达到2000亿美元的公司，就是Sun Microsystems这个商业公司。但是BSD系统作为Unix系统的一员，生根发芽，逐渐地壮大。即使这两个哥们没有再继续开发，后来Joy还是花了一些时间在商业公司的时候开发BSD系统。不过由于跟本文关系不大，我就不讲了。

再说我们前文所说的事情，就是加州大学伯克利分校，因为Joy和Haley改进了这个BSD系统，一下子就成了被告。这的确是有点冤枉，因为BSD系统这是一个Unix系统的分支，虽然它继承着Unix，但是代码早就已经经历了数代的更新，而且主要就是两个热血青年搞的，它也没有赚到什么钱，基本上就是免费发放。

USL这家公司呢，这一封诉讼着实让加州大学伯克利分校有点懵。不过呢，缓了两三周之后，他们搞清楚怎么回事以后，还是聘请了律师决定应诉。毕竟他们才知道这个BSD系统已经无处不在了。虽然按照USL的要求，要禁止你再发布这个BSD系统，这个也不现实。按照美国的法律，官司就要到被告所在的州法院去进行。也就是说，USL公司是在新泽西州，但是呢，你还是要去加州去起诉加州大学伯克利分校。经过加州大学伯克利分校的调查，他们突然发现，这家控告加州大学伯克利分校的USL公司发布的Unix系统，竟然好多的代码都是加州大学伯克利分校的代码，就是Joy跟这个Haley写的代码。而且在使用的过程中，连代码中的注释都没有改，好多的都还带有这个加州大学伯克利分校的许可证。这可能就是有史以来最搞笑的一次诉讼。

这家 USL 公司，就拿着盗用的代码起诉代码所有者侵权，这真的是非常搞笑。这家 USL 公司呢，也就很快败诉了。Novell 公司呢，就开始趁火打劫，强行收购了。USL 公司被 Novell 收购以后呢，他们 Novell 公司当时也非常有钱，他们就开始仔细地去研究，到底哪些代码还可以将伯克利大学怎样。在后来的谈判中呢，他们彼此互不相让，一度让这个 BSD 系统根本没法更新。要知道，在打官司之前，BSD 系统每年至少更新50次。自从打了官司以后呢，双方也就陷入了僵局。随后的三年时间呢，双方的律师就是你来我往，互不相让。这次长达三年的争执，律师肯定是占了上风。他们争了三年，就只为判定其中的3个文件到底是谁的。要知道，当时 BSD 系统两万多个文件，而这3个文件有或者没有，根本就无关痛痒。就在这三年之中，BSD 系统没有什么大的更新。在一九九四年六月，疲惫不堪的伯克利学校才重新发布了一个删除了那3个文件的 BSD 系统。以后的 BSD 系统呢，比如说 FreeBSD、NetBSD，还有 OpenBSD 等等，都是以伯克利大学重新发布的这个系统为基础，重新做了一份没有版权问题的版本。

同样的，战争也发生在 Unix 其他版本之上，比如说 SCO Unix 等等发行版之间，他们就互相之间打来打去。在法律和版权的硝烟之下，这些衣着华丽的律师呢，就是这场战争的主角。他们就在这个看起来有100亿美元的市场上杀得你死我活。而那些不修边幅的程序员呢，就被这场无休止的战争给吓坏了，一个一个的心里也疲惫了，一个一个的也就离开了。因为他们写的代码再也不能发布。就在这些律师为自己的胜利弹冠相庆的时候，他们从未发现的一个树苗正在茁壮成长。

在一九九一年，一个叫做 Linux 的操作系统发布了0.01版本。在一九九二年的二月三日二十三点零七分五十四秒，一个帖子出现了，呃，一个回帖出现在了 Minux 操作系统的那个新闻讨论组。他这么写到：“我基本上认为微内核有可能是未来的趋势，但是我认为实现整体内核会更容易一些。而且在做了这些修改以后，整体内核也马上可以形成一个系统。”这个帖子的作者呢，就是 Unix 的作者之一 Ken Thompson，他是在一个讨论 Linux 操作系统的帖子下留言的。随后，一个 ID 为 Linux 的人对此向 Ken Thompson 表示了感谢。在不久的将来，这个向 Ken Thompson 表示感谢的人，一个远在芬兰的大鼻子男孩，将带着一个可爱的企鹅来到 Unix 的战场，宣布这里所有的一切都是他的。

这些刚刚获胜的历史，留给世界的将是一张不可思议的脸。下一期我们将会进一步讲一个 Unix 薪火相传的故事：Linux 诞生了。和最初的 Unix 一样，Linux 也向我们展示了开放和自由的精神，将永远流传。好，这一期的内容就到这里。
